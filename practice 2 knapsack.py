# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tIuQjhz1ohemzST0EvaSG_wOI7L2u8Cx
"""

def knapsack(jobs, deadlines, profits, max_deadline):
    n = len(jobs)
    dp = [[0] * (max_deadline + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(max_deadline, -1, -1):
            if deadlines[i - 1] <= j:
                dp[i][j] = max(dp[i - 1][j], profits[i - 1] + dp[i - 1][j - deadlines[i - 1]])
            else:
                dp[i][j] = dp[i - 1][j]

    selected_jobs = []
    remaining_time = max_deadline
    for i in range(n, 0, -1):
        if dp[i][remaining_time] != dp[i - 1][remaining_time]:
            selected_jobs.append(jobs[i - 1])
            remaining_time -= deadlines[i - 1]

    return dp[n][max_deadline], selected_jobs


jobs = ['J1', 'J2', 'J3', 'J4']
deadlines = [2, 1, 4, 2]
profits = [40, 50, 30, 100]
max_deadline = max(deadlines)

max_profit, selected_jobs = knapsack(jobs, deadlines, profits, max_deadline)
print("Maximum profit:", max_profit)
print("Selected jobs:", selected_jobs)

